<lib :grid_rowData="[[[
  { sel: 'xs',  min: 0,    gap: 1, pd: 1.5 },
  { sel: 'sm',  min: 576,  gap: 1, pd: 2.25 },
  { sel: 'md',  min: 768,  gap: 1, pd: 4 },
  { sel: 'lg',  min: 992,  gap: 2, pd: 6 },
  { sel: 'xl',  min: 1200, gap: 2, pd: 0 },
  { sel: 'xxl', min: 1400, gap: 2, pd: 0 },
]]]">

<style data-name="kit-grid">
  .kit-grid {
    display: flex;
  }
  .kit-grid.v {
    flex-direction: column;
  }
  .kit-grid.spread > * {
    flex: 1;
  }
  .kit-grid.left,
  .kit-grid.top {
    align-items: start;
  }
  .kit-grid.center,
  .kit-grid.middle {
    align-items: center;
  }
  .kit-grid.right,
  .kit-grid.bottom {
    align-items: end;
  }
  .kit-grid.row {
    padding: 0 [[grid_rowData[0].pd]]em;
  }
</style>

<style :data="[[grid_rowData]]" :dataLength="[[4]]">
  @media only screen and (min-width: [[data.min]]px) {
    .kit-grid.row {
      padding: 0 [[data.pd]]em;
    }
  }
</style>

<style :data="[[grid_rowData]]">
  @media only screen and (min-width: [[data.min]]px) {
    .kit-grid.row {
      column-gap: [[data.gap]]em;
    }
    .kit-grid.row.[[data.sel]] {
      flex-direction: row;
    }
  }
</style>

<style>
  @media only screen and (min-width: [[grid_rowData[4].min]]px) {
      .lib-row {
        max-width: [[grid_rowData[4].min]]px;
        margin: 0 auto;
      }
  }
</style>

<:define tag="kit-grid"
         :class-kit-grid
         :class-v="[[false]]"
         :class-spread="[[class_row]]"
         :class-row="[[false]]"
></:define>

</lib>
